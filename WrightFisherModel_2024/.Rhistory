polygon(c((names(Nepal_GPSC_numbers_per_good_year[["1"]])), rev(names(Nepal_GPSC_numbers_per_good_year[["1"]]))), c(prev_points + Nepal_GPSC_numbers_per_good_year[[unique(Nepal_seq_clusters_dict)[order(Nepal_VT_cols)[i]]]]/seq_no_per_year_filtered_goodYears, rev(prev_points)), col = (Nepal_VT_cols_2)[order(Nepal_VT_cols)[i]], border = NA)
prev_points <- prev_points + Nepal_GPSC_numbers_per_good_year[[unique(Nepal_seq_clusters_dict)[order(Nepal_VT_cols)[i]]]]/seq_no_per_year_filtered_goodYears
}
#binom_conf_data <- t(sapply(PP_mass_cluster_freq_3, BinomCI, sum(PP_mass_cluster_freq_3,conf.level = 0.66)))
plot((names(Nepal_GPSC_numbers_per_year[["1"]])), Nepal_GPSC_numbers_per_year[["1"]]/seq_no_per_year_filtered, type = "l", ylim = c(0, 1))
for (i in 1:length(unique(Nepal_seq_clusters_dict))) {
lines((names(Nepal_GPSC_numbers_per_year_conf_low[["1"]])), Nepal_GPSC_numbers_per_year_conf_low[[unique(Nepal_seq_clusters_dict)[i]]], col = Nepal_VT_mixed_cols_2[i])
lines((names(Nepal_GPSC_numbers_per_year_conf_up[["1"]])), Nepal_GPSC_numbers_per_year_conf_up[[unique(Nepal_seq_clusters_dict)[i]]], col = Nepal_VT_mixed_cols_2[i])
#polygon(c((names(Nepal_GPSC_numbers_per_year[["1"]])), (names(Nepal_GPSC_numbers_per_year[["1"]]))), c(Nepal_GPSC_numbers_per_year_conf_low[[unique(Nepal_seq_clusters_dict)[i]]], Nepal_GPSC_numbers_per_year_conf_up[[unique(Nepal_seq_clusters_dict)[i]]]), col = "grey", density = 10, angle = 45)
lines((names(Nepal_GPSC_numbers_per_year[["1"]])), Nepal_GPSC_numbers_per_year[[unique(Nepal_seq_clusters_dict)[i]]]/seq_no_per_year_filtered, col = Nepal_VT_mixed_cols[i])
}
plot((names(Nepal_GPSC_numbers_per_year[["1"]])), Nepal_GPSC_numbers_per_year[["1"]]/seq_no_per_year_filtered, type = "l", ylim = c(0, 1))
for (i in 1:length(unique(Nepal_seq_clusters_dict))) {
#lines((names(Nepal_GPSC_numbers_per_year_conf_low[["1"]])), Nepal_GPSC_numbers_per_year_conf_low[[unique(Nepal_seq_clusters_dict)[i]]], col = Nepal_VT_mixed_cols_2[i])
#lines((names(Nepal_GPSC_numbers_per_year_conf_up[["1"]])), Nepal_GPSC_numbers_per_year_conf_up[[unique(Nepal_seq_clusters_dict)[i]]], col = Nepal_VT_mixed_cols_2[i])
#polygon(c((names(Nepal_GPSC_numbers_per_year[["1"]])), (names(Nepal_GPSC_numbers_per_year[["1"]]))), c(Nepal_GPSC_numbers_per_year_conf_low[[unique(Nepal_seq_clusters_dict)[i]]], Nepal_GPSC_numbers_per_year_conf_up[[unique(Nepal_seq_clusters_dict)[i]]]), col = "grey", density = 10, angle = 45)
lines((names(Nepal_GPSC_numbers_per_year[["1"]])), Nepal_GPSC_numbers_per_year[[unique(Nepal_seq_clusters_dict)[i]]]/seq_no_per_year_filtered, col = Nepal_VT_mixed_cols[i])
points((names(Nepal_GPSC_numbers_per_year[["1"]])), Nepal_GPSC_numbers_per_year[[unique(Nepal_seq_clusters_dict)[i]]]/seq_no_per_year_filtered, col = Nepal_VT_mixed_cols[i])
}
# filter for common clusters (>5% present in at least one year?)
Nepal_seq_clusters_dict_common <- rep(FALSE, length(unique(Nepal_seq_clusters_dict)))
names(Nepal_seq_clusters_dict_common) <- unique(Nepal_seq_clusters_dict)
for (clust in names(Nepal_seq_clusters_dict_common)) {
Nepal_seq_clusters_dict_common[clust] <- (max(Nepal_GPSC_numbers_per_year[[clust]]/seq_no_per_year_filtered)>0.05)
}
plot((names(Nepal_GPSC_numbers_per_year[["1"]])), Nepal_GPSC_numbers_per_year[["1"]]/seq_no_per_year_filtered, type = "l", ylim = c(0, 1))
for (i in 1:length((Nepal_seq_clusters_dict_common))) {
#lines((names(Nepal_GPSC_numbers_per_year_conf_low[["1"]])), Nepal_GPSC_numbers_per_year_conf_low[[unique(Nepal_seq_clusters_dict)[i]]], col = Nepal_VT_mixed_cols_2[i])
#lines((names(Nepal_GPSC_numbers_per_year_conf_up[["1"]])), Nepal_GPSC_numbers_per_year_conf_up[[unique(Nepal_seq_clusters_dict)[i]]], col = Nepal_VT_mixed_cols_2[i])
#polygon(c((names(Nepal_GPSC_numbers_per_year[["1"]])), (names(Nepal_GPSC_numbers_per_year[["1"]]))), c(Nepal_GPSC_numbers_per_year_conf_low[[unique(Nepal_seq_clusters_dict)[i]]], Nepal_GPSC_numbers_per_year_conf_up[[unique(Nepal_seq_clusters_dict)[i]]]), col = "grey", density = 10, angle = 45)
lines((names(Nepal_GPSC_numbers_per_year[["1"]])), Nepal_GPSC_numbers_per_year[[unique(Nepal_seq_clusters_dict)[i]]]/seq_no_per_year_filtered, col = Nepal_VT_mixed_cols[i])
points((names(Nepal_GPSC_numbers_per_year[["1"]])), Nepal_GPSC_numbers_per_year[[unique(Nepal_seq_clusters_dict)[i]]]/seq_no_per_year_filtered, col = Nepal_VT_mixed_cols[i])
}
# stack them
prev_points <- rep(0, length(seq_no_per_year_filtered))
plot((names(Nepal_GPSC_numbers_per_year[["1"]])), Nepal_GPSC_numbers_per_year[[order(Nepal_VT_mixed_cols)[1]]]/seq_no_per_year_filtered, type = "l", ylim = c(0, 1), col = sort(Nepal_VT_mixed_cols)[1], xlab = "Time", xaxt = "n")
axis(1, at = as.integer(names(Nepal_GPSC_numbers_per_year[["1"]])))
for (i in 1:length(unique(Nepal_seq_clusters_dict))) {
#for (i in 1:1) {
#lines((names(Nepal_GPSC_numbers_per_year_conf_low[["1"]])), Nepal_GPSC_numbers_per_year_conf_low[[unique(Nepal_seq_clusters_dict)[i]]], col = Nepal_VT_mixed_cols_2[i])
#lines((names(Nepal_GPSC_numbers_per_year_conf_up[["1"]])), Nepal_GPSC_numbers_per_year_conf_up[[unique(Nepal_seq_clusters_dict)[i]]], col = Nepal_VT_mixed_cols_2[i])
#polygon(c((names(Nepal_GPSC_numbers_per_year[["1"]])), (names(Nepal_GPSC_numbers_per_year[["1"]]))), c(Nepal_GPSC_numbers_per_year_conf_low[[unique(Nepal_seq_clusters_dict)[i]]], Nepal_GPSC_numbers_per_year_conf_up[[unique(Nepal_seq_clusters_dict)[i]]]), col = "grey", density = 10, angle = 45)
lines((names(Nepal_GPSC_numbers_per_year[["1"]])), prev_points + Nepal_GPSC_numbers_per_year[[unique(Nepal_seq_clusters_dict)[order(Nepal_VT_mixed_cols)[i]]]]/seq_no_per_year_filtered, col = sort(Nepal_VT_mixed_cols)[i])
points((names(Nepal_GPSC_numbers_per_year[["1"]])), prev_points + Nepal_GPSC_numbers_per_year[[unique(Nepal_seq_clusters_dict)[order(Nepal_VT_mixed_cols)[i]]]]/seq_no_per_year_filtered, col = sort(Nepal_VT_mixed_cols)[i])
polygon(c((names(Nepal_GPSC_numbers_per_year[["1"]])), rev(names(Nepal_GPSC_numbers_per_year[["1"]]))), c(prev_points + Nepal_GPSC_numbers_per_year[[unique(Nepal_seq_clusters_dict)[order(Nepal_VT_mixed_cols)[i]]]]/seq_no_per_year_filtered, rev(prev_points)), col = (Nepal_VT_mixed_cols_2)[order(Nepal_VT_mixed_cols)[i]], border = NA)
prev_points <- prev_points + Nepal_GPSC_numbers_per_year[[unique(Nepal_seq_clusters_dict)[order(Nepal_VT_mixed_cols)[i]]]]/seq_no_per_year_filtered
}
barplot(seq_no_per_year, xlab = "Sequencing Years", ylim = c(0, 1200), ylab = "Sequence Counts")
# do the same for 50-sample Mass UK
# benchmark run with 50 samples from Mass and UK
# compared to joint ggCaller run
Mass_UK_mmseq_clusters_50 <- read.delim("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/benchmark_mmseqs/ggC_Mass_UK_Cluster_out.tsv", header=FALSE)
# do the same for 50-sample Mass UK
# benchmark run with 50 samples from Mass and UK
# compared to joint ggCaller run
Mass_UK_mmseq_clusters_50 <- read.delim("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/benchmark_mmseqs/ggC_Mass_UK_Cluster_out.tsv", header=FALSE)
Mass_ggC_clusters_50 <- read.delim("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/benchmark_mmseqs/Mass_50samples.tsv", header=FALSE)
UK_ggC_clusters_50 <- read.delim("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/benchmark_mmseqs/UK_50samples.tsv", header=FALSE)
View(Mass_UK_mmseq_clusters_50)
Mass_ggC_clusters_50 <- read.delim("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/benchmark_mmseqs/Mass_50samples.tsv", header=FALSE)
View(Mass_ggC_clusters_50)
# do the same for 50-sample Mass UK
# benchmark run with 50 samples from Mass and UK
# compared to joint ggCaller run
Mass_UK_mmseq_clusters_50 <- read.delim("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/benchmark_mmseqs/ggC_Mass_UK_Cluster_out.tsv", header=FALSE)
Mass_ggC_clusters_50 <- read.delim("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/benchmark_mmseqs/Mass_50samples.tsv", header=FALSE)
UK_ggC_clusters_50 <- read.delim("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/benchmark_mmseqs/UK_50samples.tsv", header=FALSE)
# 50-sample gene freqs
Mass_ggCaller_gene_presence_absence_50 <- read.delim("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/Mass_only/gene_presence_absence.csv", header=FALSE)
UK_ggCaller_gene_presence_absence_50 <- read.delim("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/UK_only/gene_presence_absence.csv", header=FALSE)
View(Mass_ggCaller_gene_presence_absence_50)
# 50-sample gene freqs
Mass_ggCaller_gene_presence_absence_50 <- read.csv("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/Mass_only/gene_presence_absence.csv", header=FALSE)
convert_to_bool <- function(x){
if (x=="") 0 else 1
}
Mass_ggCaller_gene_presence_absence_50 <- Mass_ggCaller_gene_presence_absence_50[,c(-2,-3)]
Mass_ggCaller_gene_presence_absence_50[-1,-1] <- apply(Mass_ggCaller_gene_presence_absence_50[-1,-1],c(1,2), convert_to_bool)
UK_ggCaller_gene_presence_absence_50 <- UK_ggCaller_gene_presence_absence_50[,c(-2,-3)]
UK_ggCaller_gene_presence_absence_50[-1,-1] <- apply(UK_ggCaller_gene_presence_absence_50[-1,-1],c(1,2), convert_to_bool)
UK_ggCaller_gene_presence_absence_50 <- UK_ggCaller_gene_presence_absence_50[,c(-2,-3)]
UK_ggCaller_gene_presence_absence_50 <- read.delim("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/UK_only/gene_presence_absence.csv", header=FALSE)
UK_ggCaller_gene_presence_absence_50 <- UK_ggCaller_gene_presence_absence_50[,c(-2,-3)]
UK_ggCaller_gene_presence_absence_50[-1,-1] <- apply(UK_ggCaller_gene_presence_absence_50[-1,-1],c(1,2), convert_to_bool)
View(UK_ggCaller_gene_presence_absence_50)
UK_ggCaller_gene_presence_absence_50 <- read.csv("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/UK_only/gene_presence_absence.csv", header=FALSE)
UK_ggCaller_gene_presence_absence_50 <- UK_ggCaller_gene_presence_absence_50[,c(-2,-3)]
UK_ggCaller_gene_presence_absence_50 <- read.csv("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/UK_only_v2/gene_presence_absence.csv", header=FALSE)
UK_ggCaller_gene_presence_absence_50 <- read.csv("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/UK_only_v2/gene_presence_absence.csv", header=FALSE)
UK_ggCaller_gene_presence_absence_50 <- UK_ggCaller_gene_presence_absence_50[,c(-2,-3)]
UK_ggCaller_gene_presence_absence_50[-1,-1] <- apply(UK_ggCaller_gene_presence_absence_50[-1,-1],c(1,2), convert_to_bool)
Mass_UK_50_ground_truth <- read.delim("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/Mass_UK_joined/headers.tsv", header=FALSE)
View(Mass_UK_50_ground_truth)
Mass_UK_50_ground_truth_dict <- Mass_UK_50_ground_truth$V2
names(Mass_UK_50_ground_truth_dict) <- Mass_UK_50_ground_truth$V1
#dictionary that says whether a cluster element is from UK or Mass
Mass_or_UK_gene_dict_50 <- c()
Mass_or_UK_gene_dict_50[Mass_ggC_clusters_50$V1] <- "Mass"
Mass_or_UK_gene_dict_50[UK_ggC_clusters_50$V1] <- "UK"
#dictionary that says whether a cluster element is from UK or Mass
Mass_or_UK_gene_dict_50 <- c()
Mass_or_UK_gene_dict_50[Mass_ggC_clusters_50$V1] <- "Mass"
Mass_or_UK_gene_dict_50[UK_ggC_clusters_50$V1] <- "UK"
# matches gene with its corresponding Mass cluster
Mass_gene_clust_dict_50 <- Mass_ggC_clusters_50$V2
names(Mass_gene_clust_dict_50) <- Mass_ggC_clusters_50$V1
# matches gene with its corresponding UK cluster
UK_gene_clust_dict_50 <- UK_ggC_clusters_50$V2
names(UK_gene_clust_dict_50) <- UK_ggC_clusters_50$V1
# match gene with corresponding cluster of Mass-UK
Mass_UK_50_ground_truth_dict <- Mass_UK_50_ground_truth$V2
names(Mass_UK_50_ground_truth_dict) <- Mass_UK_50_ground_truth$V1
head(UK_gene_clust_dict_50)
Mass_UK_50_ground_truth_dict["ERR044869_3119"]
UK_gene_clust_dict_50["ERR044869_3119"]
Mass_UK_50_ground_truth_dict["ERR044869_12229"]
head(Mass_UK_50_ground_truth_dict)
UK_gene_clust_dict_50["6925_1#61_2994"]
Mass_gene_clust_dict_50["6925_1#61_2994"]
# create consensus clusters for Mass_UK and local Mass and local UK version
cons_Mass_UK_no_50 <- length(unique(Mass_UK_mmseq_clusters_50$V1))
consensus_clusters_Mass_UK_50 <- vector("list", length = cons_Mass_UK_no_50)
names(consensus_clusters_Mass_UK_50) <- unique(Mass_UK_mmseq_cluster_50s$V1)
consensus_clusters_Mass_UK_justMass_50 <- vector("list", length = cons_Mass_UK_no_50)
names(consensus_clusters_Mass_UK_justMass_50) <- unique(Mass_UK_mmseq_clusters_50$V1)
consensus_clusters_Mass_UK_justUK_50 <- vector("list", length = cons_Mass_UK_no_50)
names(consensus_clusters_Mass_UK_justUK_50) <- unique(Mass_UK_mmseq_clusters_50$V1)
# create consensus clusters for Mass_UK and local Mass and local UK version
cons_Mass_UK_no_50 <- length(unique(Mass_UK_mmseq_clusters_50$V1))
consensus_clusters_Mass_UK_50 <- vector("list", length = cons_Mass_UK_no_50)
names(consensus_clusters_Mass_UK_50) <- unique(Mass_UK_mmseq_clusters_50$V1)
consensus_clusters_Mass_UK_justMass_50 <- vector("list", length = cons_Mass_UK_no_50)
names(consensus_clusters_Mass_UK_justMass_50) <- unique(Mass_UK_mmseq_clusters_50$V1)
consensus_clusters_Mass_UK_justUK_50 <- vector("list", length = cons_Mass_UK_no_50)
names(consensus_clusters_Mass_UK_justUK_50) <- unique(Mass_UK_mmseq_clusters_50$V1)
#cluster_element_before <- Mass_UK_mmseq_clusters$V1[1]
#i_cluster <- 0
for (i in 1:nrow(Mass_UK_mmseq_clusters_50)) {
cluster_name <- Mass_UK_mmseq_clusters_50$V1[i]
cluster_element <- Mass_UK_mmseq_clusters_50$V2[i]
#if(Mass_UK_mmseq_clusters$V1[i] == cluster_element){ # first element of cluster, i.e. new cluster
#  i_cluster <- i_cluster +1 # go to new cluster
#}
if(Mass_or_UK_gene_dict_50[cluster_element] == "Mass"){ # if gene is from Mass
cluster <- Mass_gene_clust_dict_50[cluster_element]
consensus_clusters_Mass_UK_50[[cluster_name]] <- c(consensus_clusters_Mass_UK_50[[cluster_name]], cluster)
consensus_clusters_Mass_UK_justMass_50[[cluster_name]] <- c(consensus_clusters_Mass_UK_justMass_50[[cluster_name]], cluster)
}
else{ #if gene is from UK
cluster <- UK_gene_clust_dict_50[cluster_element]
consensus_clusters_Mass_UK_50[[cluster_name]] <- c(consensus_clusters_Mass_UK_50[[cluster_name]], cluster)
consensus_clusters_Mass_UK_justUK_50[[cluster_name]] <- c(consensus_clusters_Mass_UK_justUK_50[[cluster_name]], cluster)
}
}
length(consensus_clusters_Mass_UK_50)
# filter for those cluster that have at least one rep from Mass and UK
consensus_clusters_Mass_UK_matches_50 <- consensus_clusters_Mass_UK_50[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
length(consensus_clusters_Mass_UK_matches_50)
consensus_clusters_Mass_UK_justMass_matches_50 <- consensus_clusters_Mass_UK_justMass[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
consensus_clusters_Mass_UK_justUK_matches_50 <- consensus_clusters_Mass_UK_justUK[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
# compute consensus clusters
consensus_gene_clusters_Mass_freqs_v2_50 <- rep(0, length(consensus_clusters_Mass_UK_matches_50))
consensus_gene_clusters_UK_freqs_v2_50 <- rep(0, length(consensus_clusters_Mass_UK_matches_50))
for (i in 1:length(consensus_clusters_Mass_UK_matches_50)) {
cluster_names_Mass <- sapply(consensus_clusters_Mass_UK_justMass_matches_50[[i]], replace_minus)
cluster_presence_vec <- rep(0, length(Mass_ggCaller_gene_presence_absence_listdict_50[[1]]))
for (j in cluster_names_Mass) {
cluster_presence_vec <- (cluster_presence_vec | Mass_ggCaller_gene_presence_absence_listdict_50[[j]])
}
cluster_presence_vec <- as.integer(cluster_presence_vec)
consensus_gene_clusters_Mass_freqs_v2_50[i] <- sum(cluster_presence_vec)/length(cluster_presence_vec_50)
cluster_names_UK <- sapply(consensus_clusters_Mass_UK_justUK_matches_50[[i]], replace_minus)
cluster_presence_vec_UK <- rep(0, length(UK_ggCaller_gene_presence_absence_listdict_50[[1]]))
for (k in cluster_names_UK) {
cluster_presence_vec_UK <- cluster_presence_vec_UK | UK_ggCaller_gene_presence_absence_listdict_50[[k]]
}
cluster_presence_vec_UK <- as.integer(cluster_presence_vec_UK)
consensus_gene_clusters_UK_freqs_v2_50[i] <- sum(cluster_presence_vec_UK)/length(cluster_presence_vec_UK)
}
Mass_ggCaller_gene_presence_absence_50 <- Mass_ggCaller_gene_presence_absence_50[,c(-2,-3)]
Mass_ggCaller_gene_presence_absence_50[-1,-1] <- apply(Mass_ggCaller_gene_presence_absence_50[-1,-1],c(1,2), convert_to_bool)
UK_ggCaller_gene_presence_absence_50 <- UK_ggCaller_gene_presence_absence_50[,c(-2,-3)]
UK_ggCaller_gene_presence_absence_50[-1,-1] <- apply(UK_ggCaller_gene_presence_absence_50[-1,-1],c(1,2), convert_to_bool)
# create a list dictionary with cluster names and presence-absence vectors as content
Mass_ggCaller_gene_presence_absence_listdict_50 <- list()
for (i in 2:nrow(Mass_ggCaller_gene_presence_absence_50)) {
Mass_ggCaller_gene_presence_absence_listdict_50[[Mass_ggCaller_gene_presence_absence_50[i,1]]] <- as.integer(Mass_ggCaller_gene_presence_absence_50[i,-1])
}
UK_ggCaller_gene_presence_absence_listdict_50 <- list()
for (i in 2:nrow(UK_ggCaller_gene_presence_absence)) {
UK_ggCaller_gene_presence_absence_listdict[[UK_ggCaller_gene_presence_absence[i,1]]] <- as.integer(UK_ggCaller_gene_presence_absence[i,-1])
}
# compute consensus clusters
consensus_gene_clusters_Mass_freqs_v2_50 <- rep(0, length(consensus_clusters_Mass_UK_matches_50))
consensus_gene_clusters_UK_freqs_v2_50 <- rep(0, length(consensus_clusters_Mass_UK_matches_50))
for (i in 1:length(consensus_clusters_Mass_UK_matches_50)) {
cluster_names_Mass <- sapply(consensus_clusters_Mass_UK_justMass_matches_50[[i]], replace_minus)
cluster_presence_vec <- rep(0, length(Mass_ggCaller_gene_presence_absence_listdict_50[[1]]))
for (j in cluster_names_Mass) {
cluster_presence_vec <- (cluster_presence_vec | Mass_ggCaller_gene_presence_absence_listdict_50[[j]])
}
cluster_presence_vec <- as.integer(cluster_presence_vec)
consensus_gene_clusters_Mass_freqs_v2_50[i] <- sum(cluster_presence_vec)/length(cluster_presence_vec_50)
cluster_names_UK <- sapply(consensus_clusters_Mass_UK_justUK_matches_50[[i]], replace_minus)
cluster_presence_vec_UK <- rep(0, length(UK_ggCaller_gene_presence_absence_listdict_50[[1]]))
for (k in cluster_names_UK) {
cluster_presence_vec_UK <- cluster_presence_vec_UK | UK_ggCaller_gene_presence_absence_listdict_50[[k]]
}
cluster_presence_vec_UK <- as.integer(cluster_presence_vec_UK)
consensus_gene_clusters_UK_freqs_v2_50[i] <- sum(cluster_presence_vec_UK)/length(cluster_presence_vec_UK)
}
# compute consensus clusters
consensus_gene_clusters_Mass_freqs_v2_50 <- rep(0, length(consensus_clusters_Mass_UK_matches_50))
consensus_gene_clusters_UK_freqs_v2_50 <- rep(0, length(consensus_clusters_Mass_UK_matches_50))
for (i in 1:length(consensus_clusters_Mass_UK_matches_50)) {
cluster_names_Mass <- sapply(consensus_clusters_Mass_UK_justMass_matches_50[[i]], replace_minus)
cluster_presence_vec <- rep(0, length(Mass_ggCaller_gene_presence_absence_listdict_50[[1]]))
for (j in cluster_names_Mass) {
cluster_presence_vec <- (cluster_presence_vec | Mass_ggCaller_gene_presence_absence_listdict_50[[j]])
}
cluster_presence_vec <- as.integer(cluster_presence_vec)
consensus_gene_clusters_Mass_freqs_v2_50[i] <- sum(cluster_presence_vec)/length(cluster_presence_vec)
cluster_names_UK <- sapply(consensus_clusters_Mass_UK_justUK_matches_50[[i]], replace_minus)
cluster_presence_vec_UK <- rep(0, length(UK_ggCaller_gene_presence_absence_listdict_50[[1]]))
for (k in cluster_names_UK) {
cluster_presence_vec_UK <- cluster_presence_vec_UK | UK_ggCaller_gene_presence_absence_listdict_50[[k]]
}
cluster_presence_vec_UK <- as.integer(cluster_presence_vec_UK)
consensus_gene_clusters_UK_freqs_v2_50[i] <- sum(cluster_presence_vec_UK)/length(cluster_presence_vec_UK)
}
head(UK_ggCaller_gene_presence_absence_listdict_50)
UK_ggCaller_gene_presence_absence_listdict_50 <- list()
for (i in 2:nrow(UK_ggCaller_gene_presence_absence_50)) {
UK_ggCaller_gene_presence_absence_listdict_50[[UK_ggCaller_gene_presence_absence_50[i,1]]] <- as.integer(UK_ggCaller_gene_presence_absence_50[i,-1])
}
# compute consensus clusters
consensus_gene_clusters_Mass_freqs_v2_50 <- rep(0, length(consensus_clusters_Mass_UK_matches_50))
consensus_gene_clusters_UK_freqs_v2_50 <- rep(0, length(consensus_clusters_Mass_UK_matches_50))
for (i in 1:length(consensus_clusters_Mass_UK_matches_50)) {
cluster_names_Mass <- sapply(consensus_clusters_Mass_UK_justMass_matches_50[[i]], replace_minus)
cluster_presence_vec <- rep(0, length(Mass_ggCaller_gene_presence_absence_listdict_50[[1]]))
for (j in cluster_names_Mass) {
cluster_presence_vec <- (cluster_presence_vec | Mass_ggCaller_gene_presence_absence_listdict_50[[j]])
}
cluster_presence_vec <- as.integer(cluster_presence_vec)
consensus_gene_clusters_Mass_freqs_v2_50[i] <- sum(cluster_presence_vec)/length(cluster_presence_vec)
cluster_names_UK <- sapply(consensus_clusters_Mass_UK_justUK_matches_50[[i]], replace_minus)
cluster_presence_vec_UK <- rep(0, length(UK_ggCaller_gene_presence_absence_listdict_50[[1]]))
for (k in cluster_names_UK) {
cluster_presence_vec_UK <- cluster_presence_vec_UK | UK_ggCaller_gene_presence_absence_listdict_50[[k]]
}
cluster_presence_vec_UK <- as.integer(cluster_presence_vec_UK)
consensus_gene_clusters_UK_freqs_v2_50[i] <- sum(cluster_presence_vec_UK)/length(cluster_presence_vec_UK)
}
#plot them!
par(pty="s")
plot(consensus_gene_clusters_Mass_freqs_v2, consensus_gene_clusters_UK_freqs_v2, xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 95% sequence identity", ylim = c(0,1), xlim = c(0,1))
abline(0,1)
plot(consensus_gene_clusters_Mass_freqs_v2, consensus_gene_clusters_UK_freqs_v2, pch = 19, col = "#00000030")
plot(consensus_gene_clusters_Mass_freqs_v2, consensus_gene_clusters_UK_freqs_v2, pch = 19, col = "#00000030",ylim = c(0,1), xlim = c(0,1))
abline(0,1)
length(which(abs(consensus_gene_clusters_Mass_freqs_v2 - consensus_gene_clusters_UK_freqs_v2)>0.05))
# 857
length(which(abs(consensus_gene_clusters_Mass_freqs_v2 - consensus_gene_clusters_UK_freqs_v2)<=0.05))
plot(consensus_gene_clusters_Mass_freqs_v2_50, consensus_gene_clusters_UK_freqs_v2_50, xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 95% sequence identity", ylim = c(0,1), xlim = c(0,1))
abline(0,1)
plot(consensus_gene_clusters_Mass_freqs_v2_50, consensus_gene_clusters_UK_freqs_v2_50, xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 95% sequence identity", ylim = c(0,1), xlim = c(0,1))
abline(0,1)
plot(consensus_gene_clusters_Mass_freqs_v2_50, consensus_gene_clusters_UK_freqs_v2_50, pch = 19, col = "#00000030")
plot(consensus_gene_clusters_Mass_freqs_v2_50, consensus_gene_clusters_UK_freqs_v2_50, pch = 19, col = "#00000030",ylim = c(0,1), xlim = c(0,1))
abline(0,1)
length(which(abs(consensus_gene_clusters_Mass_freqs_v2_50 - consensus_gene_clusters_UK_freqs_v2_50)>0.05))
# 857
length(which(abs(consensus_gene_clusters_Mass_freqs_v2_50 - consensus_gene_clusters_UK_freqs_v2_50)<=0.05))
length(consensus_clusters_Mass_UK_justMass_matches_50)
consensus_gene_clusters_Mass_freqs_v2_50
head(consensus_clusters_Mass_UK_justMass_matches_50)
# filter for those cluster that have at least one rep from Mass and UK
consensus_clusters_Mass_UK_matches_50 <- consensus_clusters_Mass_UK_50[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
consensus_clusters_Mass_UK_justMass_matches_50 <- consensus_clusters_Mass_UK_justMass[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
consensus_clusters_Mass_UK_justUK_matches_50 <- consensus_clusters_Mass_UK_justUK[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
head(consensus_clusters_Mass_UK_justMass_matches_50)
head(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0))
consensus_clusters_Mass_UK_justMass_matches_50["ERR044972_7425"]
consensus_clusters_Mass_UK_justMass_matches_50["ERR044972_7425"]>0
length(consensus_clusters_Mass_UK_justMass_matches_50["ERR044972_7425"])>0
length(consensus_clusters_Mass_UK_justMass_matches_50["ERR044972_7425"])
consensus_clusters_Mass_UK_justMass_matches_50["ERR044972_7425"] == NULL
is.null(consensus_clusters_Mass_UK_justMass_matches_50["ERR044972_7425"])
consensus_clusters_Mass_UK_justMass_matches_50["ERR044972_7425"]
unname(consensus_clusters_Mass_UK_justMass_matches_50["ERR044972_7425"])
is.null(unname(consensus_clusters_Mass_UK_justMass_matches_50["ERR044972_7425"]))
consensus_clusters_Mass_UK_justMass_matches_50[["ERR044972_7425"]]
is.null(consensus_clusters_Mass_UK_justMass_matches_50[["ERR044972_7425"]])
which(!is.null(consensus_clusters_Mass_UK_justMass_matches_50))
head(lengths(consensus_clusters_Mass_UK_justMass_matches_50))
lengths(consensus_clusters_Mass_UK_justMass_matches_50)[1:20]
which(lengths(consensus_clusters_Mass_UK_justMass_50)>0)[1:10]
# create consensus clusters for Mass_UK and local Mass and local UK version
cons_Mass_UK_no_50 <- length(unique(Mass_UK_mmseq_clusters_50$V1))
consensus_clusters_Mass_UK_50 <- vector("list", length = cons_Mass_UK_no_50)
names(consensus_clusters_Mass_UK_50) <- unique(Mass_UK_mmseq_clusters_50$V1)
consensus_clusters_Mass_UK_justMass_50 <- vector("list", length = cons_Mass_UK_no_50)
names(consensus_clusters_Mass_UK_justMass_50) <- unique(Mass_UK_mmseq_clusters_50$V1)
consensus_clusters_Mass_UK_justUK_50 <- vector("list", length = cons_Mass_UK_no_50)
names(consensus_clusters_Mass_UK_justUK_50) <- unique(Mass_UK_mmseq_clusters_50$V1)
#cluster_element_before <- Mass_UK_mmseq_clusters$V1[1]
#i_cluster <- 0
for (i in 1:nrow(Mass_UK_mmseq_clusters_50)) {
cluster_name <- Mass_UK_mmseq_clusters_50$V1[i]
cluster_element <- Mass_UK_mmseq_clusters_50$V2[i]
#if(Mass_UK_mmseq_clusters$V1[i] == cluster_element){ # first element of cluster, i.e. new cluster
#  i_cluster <- i_cluster +1 # go to new cluster
#}
if(Mass_or_UK_gene_dict_50[cluster_element] == "Mass"){ # if gene is from Mass
cluster <- Mass_gene_clust_dict_50[cluster_element]
consensus_clusters_Mass_UK_50[[cluster_name]] <- c(consensus_clusters_Mass_UK_50[[cluster_name]], cluster)
consensus_clusters_Mass_UK_justMass_50[[cluster_name]] <- c(consensus_clusters_Mass_UK_justMass_50[[cluster_name]], cluster)
}
else{ #if gene is from UK
cluster <- UK_gene_clust_dict_50[cluster_element]
consensus_clusters_Mass_UK_50[[cluster_name]] <- c(consensus_clusters_Mass_UK_50[[cluster_name]], cluster)
consensus_clusters_Mass_UK_justUK_50[[cluster_name]] <- c(consensus_clusters_Mass_UK_justUK_50[[cluster_name]], cluster)
}
}
# filter for those cluster that have at least one rep from Mass and UK
consensus_clusters_Mass_UK_matches_50 <- consensus_clusters_Mass_UK_50[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
consensus_clusters_Mass_UK_justMass_matches_50 <- consensus_clusters_Mass_UK_justMass[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
consensus_clusters_Mass_UK_justUK_matches_50 <- consensus_clusters_Mass_UK_justUK[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
consensus_clusters_Mass_UK_justMass_matches_50[1:10]
# filter for those cluster that have at least one rep from Mass and UK
consensus_clusters_Mass_UK_matches_50 <- consensus_clusters_Mass_UK_50[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
consensus_clusters_Mass_UK_justMass_matches_50 <- consensus_clusters_Mass_UK_justMass_50[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
consensus_clusters_Mass_UK_justUK_matches_50 <- consensus_clusters_Mass_UK_justUK_50[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
# create consensus clusters for Mass_UK and local Mass and local UK version
cons_Mass_UK_no_50 <- length(unique(Mass_UK_mmseq_clusters_50$V1))
consensus_clusters_Mass_UK_50 <- vector("list", length = cons_Mass_UK_no_50)
names(consensus_clusters_Mass_UK_50) <- unique(Mass_UK_mmseq_clusters_50$V1)
consensus_clusters_Mass_UK_justMass_50 <- vector("list", length = cons_Mass_UK_no_50)
names(consensus_clusters_Mass_UK_justMass_50) <- unique(Mass_UK_mmseq_clusters_50$V1)
consensus_clusters_Mass_UK_justUK_50 <- vector("list", length = cons_Mass_UK_no_50)
names(consensus_clusters_Mass_UK_justUK_50) <- unique(Mass_UK_mmseq_clusters_50$V1)
#cluster_element_before <- Mass_UK_mmseq_clusters$V1[1]
#i_cluster <- 0
for (i in 1:nrow(Mass_UK_mmseq_clusters_50)) {
cluster_name <- Mass_UK_mmseq_clusters_50$V1[i]
cluster_element <- Mass_UK_mmseq_clusters_50$V2[i]
#if(Mass_UK_mmseq_clusters$V1[i] == cluster_element){ # first element of cluster, i.e. new cluster
#  i_cluster <- i_cluster +1 # go to new cluster
#}
if(Mass_or_UK_gene_dict_50[cluster_element] == "Mass"){ # if gene is from Mass
cluster <- Mass_gene_clust_dict_50[cluster_element]
consensus_clusters_Mass_UK_50[[cluster_name]] <- c(consensus_clusters_Mass_UK_50[[cluster_name]], cluster)
consensus_clusters_Mass_UK_justMass_50[[cluster_name]] <- c(consensus_clusters_Mass_UK_justMass_50[[cluster_name]], cluster)
}
else{ #if gene is from UK
cluster <- UK_gene_clust_dict_50[cluster_element]
consensus_clusters_Mass_UK_50[[cluster_name]] <- c(consensus_clusters_Mass_UK_50[[cluster_name]], cluster)
consensus_clusters_Mass_UK_justUK_50[[cluster_name]] <- c(consensus_clusters_Mass_UK_justUK_50[[cluster_name]], cluster)
}
}
# filter for those cluster that have at least one rep from Mass and UK
consensus_clusters_Mass_UK_matches_50 <- consensus_clusters_Mass_UK_50[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
consensus_clusters_Mass_UK_justMass_matches_50 <- consensus_clusters_Mass_UK_justMass_50[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
consensus_clusters_Mass_UK_justUK_matches_50 <- consensus_clusters_Mass_UK_justUK_50[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
# compute consensus clusters
consensus_gene_clusters_Mass_freqs_v2_50 <- rep(0, length(consensus_clusters_Mass_UK_matches_50))
consensus_gene_clusters_UK_freqs_v2_50 <- rep(0, length(consensus_clusters_Mass_UK_matches_50))
for (i in 1:length(consensus_clusters_Mass_UK_matches_50)) {
cluster_names_Mass <- sapply(consensus_clusters_Mass_UK_justMass_matches_50[[i]], replace_minus)
cluster_presence_vec <- rep(0, length(Mass_ggCaller_gene_presence_absence_listdict_50[[1]]))
for (j in cluster_names_Mass) {
cluster_presence_vec <- (cluster_presence_vec | Mass_ggCaller_gene_presence_absence_listdict_50[[j]])
}
cluster_presence_vec <- as.integer(cluster_presence_vec)
consensus_gene_clusters_Mass_freqs_v2_50[i] <- sum(cluster_presence_vec)/length(cluster_presence_vec)
cluster_names_UK <- sapply(consensus_clusters_Mass_UK_justUK_matches_50[[i]], replace_minus)
cluster_presence_vec_UK <- rep(0, length(UK_ggCaller_gene_presence_absence_listdict_50[[1]]))
for (k in cluster_names_UK) {
cluster_presence_vec_UK <- cluster_presence_vec_UK | UK_ggCaller_gene_presence_absence_listdict_50[[k]]
}
cluster_presence_vec_UK <- as.integer(cluster_presence_vec_UK)
consensus_gene_clusters_UK_freqs_v2_50[i] <- sum(cluster_presence_vec_UK)/length(cluster_presence_vec_UK)
}
#plot them!
par(pty="s")
plot(consensus_gene_clusters_Mass_freqs_v2_50, consensus_gene_clusters_UK_freqs_v2_50, xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 95% sequence identity", ylim = c(0,1), xlim = c(0,1))
consensus_clusters_Mass_UK_justMass_matches_50[1:10]
consensus_gene_clusters_Mass_freqs_v2_50[1:10]
consensus_gene_clusters_UK_freqs_v2_50[1:10]
tail(consensus_gene_clusters_UK_freqs_v2_50)
# find local presence-absence matrices
# 50-sample gene freqs
Mass_ggCaller_gene_presence_absence_50 <- read.csv("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/Mass_only/gene_presence_absence.csv", header=FALSE)
UK_ggCaller_gene_presence_absence_50 <- read.csv("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/UK_only_v2/gene_presence_absence.csv", header=FALSE)
convert_to_bool <- function(x){
if (x=="") 0 else 1
}
Mass_ggCaller_gene_presence_absence_50 <- Mass_ggCaller_gene_presence_absence_50[,c(-2,-3)]
Mass_ggCaller_gene_presence_absence_50[-1,-1] <- apply(Mass_ggCaller_gene_presence_absence_50[-1,-1],c(1,2), convert_to_bool)
# find local presence-absence matrices
# 50-sample gene freqs
Mass_ggCaller_gene_presence_absence_50_ori <- read.csv("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/Mass_only/gene_presence_absence.csv", header=FALSE)
UK_ggCaller_gene_presence_absence_50_ori <- read.csv("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/UK_only_v2/gene_presence_absence.csv", header=FALSE)
# find local presence-absence matrices
# 50-sample gene freqs
Mass_ggCaller_gene_presence_absence_50_ori <- read.csv("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/Mass_only/gene_presence_absence.csv", header=FALSE)
UK_ggCaller_gene_presence_absence_50_ori <- read.csv("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/UK_only_v2/gene_presence_absence.csv", header=FALSE)
Mass_ggCaller_gene_presence_absence_50 <- Mass_ggCaller_gene_presence_absence_50_ori[,c(-2,-3)]
Mass_ggCaller_gene_presence_absence_50[-1,-1] <- apply(Mass_ggCaller_gene_presence_absence_50[-1,-1],c(1,2), convert_to_bool)
UK_ggCaller_gene_presence_absence_50_ori <- read.csv("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/JoinedMassUK_ggCallerRun/UK_only_v2/gene_presence_absence.csv", header=FALSE)
UK_ggCaller_gene_presence_absence_50 <- UK_ggCaller_gene_presence_absence_50_ori[,c(-2,-3)]
UK_ggCaller_gene_presence_absence_50[-1,-1] <- apply(UK_ggCaller_gene_presence_absence_50[-1,-1],c(1,2), convert_to_bool)
# create a list dictionary with cluster names and presence-absence vectors as content
Mass_ggCaller_gene_presence_absence_listdict_50 <- list()
for (i in 2:nrow(Mass_ggCaller_gene_presence_absence_50)) {
Mass_ggCaller_gene_presence_absence_listdict_50[[Mass_ggCaller_gene_presence_absence_50[i,1]]] <- as.integer(Mass_ggCaller_gene_presence_absence_50[i,-1])
}
UK_ggCaller_gene_presence_absence_listdict_50 <- list()
for (i in 2:nrow(UK_ggCaller_gene_presence_absence_50)) {
UK_ggCaller_gene_presence_absence_listdict_50[[UK_ggCaller_gene_presence_absence_50[i,1]]] <- as.integer(UK_ggCaller_gene_presence_absence_50[i,-1])
}
#dictionary that says whether a cluster element is from UK or Mass
Mass_or_UK_gene_dict_50 <- c()
Mass_or_UK_gene_dict_50[Mass_ggC_clusters_50$V1] <- "Mass"
Mass_or_UK_gene_dict_50[UK_ggC_clusters_50$V1] <- "UK"
# matches gene with its corresponding Mass cluster
Mass_gene_clust_dict_50 <- Mass_ggC_clusters_50$V2
names(Mass_gene_clust_dict_50) <- Mass_ggC_clusters_50$V1
# matches gene with its corresponding UK cluster
UK_gene_clust_dict_50 <- UK_ggC_clusters_50$V2
names(UK_gene_clust_dict_50) <- UK_ggC_clusters_50$V1
# match gene with corresponding cluster of Mass-UK
Mass_UK_50_ground_truth_dict <- Mass_UK_50_ground_truth$V2
names(Mass_UK_50_ground_truth_dict) <- Mass_UK_50_ground_truth$V1
# create consensus clusters for Mass_UK and local Mass and local UK version
cons_Mass_UK_no_50 <- length(unique(Mass_UK_mmseq_clusters_50$V1))
consensus_clusters_Mass_UK_50 <- vector("list", length = cons_Mass_UK_no_50)
names(consensus_clusters_Mass_UK_50) <- unique(Mass_UK_mmseq_clusters_50$V1)
consensus_clusters_Mass_UK_justMass_50 <- vector("list", length = cons_Mass_UK_no_50)
names(consensus_clusters_Mass_UK_justMass_50) <- unique(Mass_UK_mmseq_clusters_50$V1)
consensus_clusters_Mass_UK_justUK_50 <- vector("list", length = cons_Mass_UK_no_50)
names(consensus_clusters_Mass_UK_justUK_50) <- unique(Mass_UK_mmseq_clusters_50$V1)
#cluster_element_before <- Mass_UK_mmseq_clusters$V1[1]
#i_cluster <- 0
for (i in 1:nrow(Mass_UK_mmseq_clusters_50)) {
cluster_name <- Mass_UK_mmseq_clusters_50$V1[i]
cluster_element <- Mass_UK_mmseq_clusters_50$V2[i]
#if(Mass_UK_mmseq_clusters$V1[i] == cluster_element){ # first element of cluster, i.e. new cluster
#  i_cluster <- i_cluster +1 # go to new cluster
#}
if(Mass_or_UK_gene_dict_50[cluster_element] == "Mass"){ # if gene is from Mass
cluster <- Mass_gene_clust_dict_50[cluster_element]
consensus_clusters_Mass_UK_50[[cluster_name]] <- c(consensus_clusters_Mass_UK_50[[cluster_name]], cluster)
consensus_clusters_Mass_UK_justMass_50[[cluster_name]] <- c(consensus_clusters_Mass_UK_justMass_50[[cluster_name]], cluster)
}
else{ #if gene is from UK
cluster <- UK_gene_clust_dict_50[cluster_element]
consensus_clusters_Mass_UK_50[[cluster_name]] <- c(consensus_clusters_Mass_UK_50[[cluster_name]], cluster)
consensus_clusters_Mass_UK_justUK_50[[cluster_name]] <- c(consensus_clusters_Mass_UK_justUK_50[[cluster_name]], cluster)
}
}
# filter for those cluster that have at least one rep from Mass and UK
consensus_clusters_Mass_UK_matches_50 <- consensus_clusters_Mass_UK_50[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
consensus_clusters_Mass_UK_justMass_matches_50 <- consensus_clusters_Mass_UK_justMass_50[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
consensus_clusters_Mass_UK_justUK_matches_50 <- consensus_clusters_Mass_UK_justUK_50[intersect(which(lengths(consensus_clusters_Mass_UK_justMass_50)>0), which(lengths(consensus_clusters_Mass_UK_justUK_50)>0))]
# compute consensus clusters
consensus_gene_clusters_Mass_freqs_v2_50 <- rep(0, length(consensus_clusters_Mass_UK_matches_50))
consensus_gene_clusters_UK_freqs_v2_50 <- rep(0, length(consensus_clusters_Mass_UK_matches_50))
for (i in 1:length(consensus_clusters_Mass_UK_matches_50)) {
cluster_names_Mass <- sapply(consensus_clusters_Mass_UK_justMass_matches_50[[i]], replace_minus)
cluster_presence_vec <- rep(0, length(Mass_ggCaller_gene_presence_absence_listdict_50[[1]]))
for (j in cluster_names_Mass) {
cluster_presence_vec <- (cluster_presence_vec | Mass_ggCaller_gene_presence_absence_listdict_50[[j]])
}
cluster_presence_vec <- as.integer(cluster_presence_vec)
consensus_gene_clusters_Mass_freqs_v2_50[i] <- sum(cluster_presence_vec)/length(cluster_presence_vec)
cluster_names_UK <- sapply(consensus_clusters_Mass_UK_justUK_matches_50[[i]], replace_minus)
cluster_presence_vec_UK <- rep(0, length(UK_ggCaller_gene_presence_absence_listdict_50[[1]]))
for (k in cluster_names_UK) {
cluster_presence_vec_UK <- cluster_presence_vec_UK | UK_ggCaller_gene_presence_absence_listdict_50[[k]]
}
cluster_presence_vec_UK <- as.integer(cluster_presence_vec_UK)
consensus_gene_clusters_UK_freqs_v2_50[i] <- sum(cluster_presence_vec_UK)/length(cluster_presence_vec_UK)
}
#plot them!
par(pty="s")
plot(consensus_gene_clusters_Mass_freqs_v2_50, consensus_gene_clusters_UK_freqs_v2_50, xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 95% sequence identity", ylim = c(0,1), xlim = c(0,1))
abline(0,1)
plot(consensus_gene_clusters_Mass_freqs_v2_50, consensus_gene_clusters_UK_freqs_v2_50, pch = 19, col = "#00000030")
plot(consensus_gene_clusters_Mass_freqs_v2_50, consensus_gene_clusters_UK_freqs_v2_50, pch = 19, col = "#00000030",ylim = c(0,1), xlim = c(0,1))
abline(0,1)
length(which(abs(consensus_gene_clusters_Mass_freqs_v2_50 - consensus_gene_clusters_UK_freqs_v2_50)>0.05))
# 17
length(which(abs(consensus_gene_clusters_Mass_freqs_v2_50 - consensus_gene_clusters_UK_freqs_v2_50)<=0.05))
length(which(abs(consensus_gene_clusters_Mass_freqs_v2_50 - consensus_gene_clusters_UK_freqs_v2_50)>0.05))
# 647
length(which(abs(consensus_gene_clusters_Mass_freqs_v2_50 - consensus_gene_clusters_UK_freqs_v2_50)<=0.05))
647/1891
head(Mass_gene_clust_dict_50)
Mass_UK_50_ground_truth_dict["7001_1#22_2563"]
barplot(seq_no_per_year, xlab = "Sequencing Years", ylim = c(0, 1200), ylab = "Sequence Counts")
Mass_UK_50_ground_truth_dict["ERR046154_3890"]
Mass_gene_clust_dict_50[1:20]
Mass_UK_50_ground_truth_dict["7001_1#22_2563"]
Mass_UK_50_ground_truth_dict["6925_1#61_5121"]
UK_gene_clust_dict_50[1:20]
Mass_UK_50_ground_truth_dict["ERR044869_3119"]
Mass_UK_50_ground_truth_dict[1:20]
View(Mass_ggCaller_gene_presence_absence_50_ori)
616 + 672 + 2, 750
616 + 672 + 2750
